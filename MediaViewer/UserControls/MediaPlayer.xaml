<UserControl x:Class="MediaViewer.UserControls.MediaPlayer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             >
    <UserControl.Resources>
        <Storyboard x:Key="tipStoryboard"
                    Storyboard.TargetName="tipBox" >
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Canvas.Left)">
                <DiscreteDoubleKeyFrame KeyTime="00:00:00"
                                        Value="115"/>
                <DiscreteDoubleKeyFrame KeyTime="00:00:02"
                                        Value="150"/>
                <DiscreteDoubleKeyFrame KeyTime="00:00:04"
                                        Value="185"/>
                <DiscreteDoubleKeyFrame KeyTime="00:00:06"
                                        Value="280"/>
            </DoubleAnimationUsingKeyFrames>
            <StringAnimationUsingKeyFrames Storyboard.TargetProperty="Tag">
                <DiscreteStringKeyFrame KeyTime="00:00:00"
                                        Value="Stops media when playing."/>
                <DiscreteStringKeyFrame KeyTime="00:00:02"
                                        Value="Plays media, or pauses currently playing media." />
                    <DiscreteStringKeyFrame KeyTime="00:00:04"
                                            Value="Toggles mute." />
                    <DiscreteStringKeyFrame KeyTime="00:00:06"
                                            Value="Controls the volume." />
            </StringAnimationUsingKeyFrames>
            <ParallelTimeline Storyboard.TargetProperty="Opacity">
                <DoubleAnimation BeginTime="00:00:00"
                                 To="1"/>
                <DoubleAnimation BeginTime="00:00:08"
                                 To="0"/>
            </ParallelTimeline>
            <ParallelTimeline Storyboard.TargetName="progressSlider"
                              Storyboard.TargetProperty="Opacity">
                <DoubleAnimation BeginTime="00:00:00"
                                 To="0"/>
                <DoubleAnimation BeginTime="00:00:08"
                                 To="1"/>
            </ParallelTimeline>
        </Storyboard>
    </UserControl.Resources>
    <DockPanel>
        <Grid DockPanel.Dock="Bottom"
              HorizontalAlignment="Center"
              Width="400" Height="50"
              Background="{StaticResource MediaControlPanelBackground}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Canvas VerticalAlignment="Top"
                    Margin="0 6 0 0">
                <StackPanel x:Name="tipBox"
                            Canvas.Bottom="0"
                            Opacity="0">
                    <Border CornerRadius="4"
SnapsToDevicePixels="True"
Width="100"
Padding="4"
Background="{StaticResource paleBrush}"
BorderBrush="{StaticResource orangeBrush}"
BorderThickness="1">
                        <TextBlock TextWrapping="Wrap"
TextAlignment="Center"
Text="{Binding ElementName=tipBox,
Path=Tag}" />
                    </Border>
                    <Path Margin="0 -1 0 0"
SnapsToDevicePixels="True"
Stroke="{StaticResource orangeBrush}"
Fill="{StaticResource paleBrush}"
Data="M40,0 L50,10 60,0" />
                </StackPanel>
            </Canvas>
            <Button Style="{StaticResource mediaButtonStyle}"
Content="Help">
                <Button.Triggers>
                    <EventTrigger RoutedEvent="Button.Click">
                        <BeginStoryboard Storyboard="{StaticResource tipStoryboard}"/>
                    </EventTrigger>
                </Button.Triggers>
            </Button>
            <Grid Grid.Column="1"
                  HorizontalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Button Style="{StaticResource mediaButtonStyle}"
                        Click="Stop_Click">
                    <Border Width="18"
                            Height="20"
                            Background="{StaticResource redRadial}"
                            CornerRadius="1"
                            BorderBrush="{StaticResource controlOutline}"
                            BorderThickness="1">
                        <Rectangle HorizontalAlignment="Center"
                                   VerticalAlignment="Top"
                                   Margin="0,1,0,0"
                                   Width="15"
                                   Height="10"
                                   Fill="{StaticResource glossBrush}"
                                   RadiusX="1"
                                   RadiusY="1" />
                    </Border>
                </Button>
                <Button Grid.Column="1"
                        Click="Play_Click"
                        Style="{StaticResource fancyButtonStyle}">
                    <Grid Margin="4 0 0 0">
                        <Polygon Fill="{StaticResource yellowGradient }"
                                 Stroke="{StaticResource chromeOutline}"
                                 Points="0,0 18, 10 0, 18">
                            <Polygon.Style>
                                <Style TargetType="{x:Type Polygon}">
                                    <Style.Triggers>
                                        <Trigger Property="DataContext" Value="Playing">
                                            <Setter Property="Visibility" Value="Hidden" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Polygon.Style>
                        </Polygon>
                        <Canvas>
                            <Rectangle Height="18"
                                       Fill="{StaticResource yellowGradient}"
                                       Stroke="{StaticResource chromeOutline}"
                                       Width="6" />
                            <Rectangle Height="18"
                                       Fill="{StaticResource yellowGradient}"
                                       Stroke="{StaticResource chromeOutline}"
                                       Width="6"
                                       Canvas.Left="8" />
                            <Canvas.Style>
                                <Style TargetType="{x:Type Canvas}">
                                    <Setter Property="Visibility" Value="Hidden" />
                                    <Style.Triggers>
                                        <Trigger Property="DataContext" Value="Playing">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Canvas.Style>
                        </Canvas>
                    </Grid>
                </Button>
                <ToggleButton Grid.Column="2"
                              Style="{StaticResource mediaButtonStyle}"
                              IsChecked="{Binding ElementName=mediaElement,Path=IsMuted}">
                    <Grid>
                        <Canvas Width="20" Height="20">
                        <!--speaker-->
                        <Path Fill="{StaticResource redRadial}"
                              Stroke="{StaticResource controlOutline}"
                              StrokeLineJoin="Round">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="12 5"
                                                IsClosed="True">
                                        <LineSegment Point="0,6" />
                                        <PolyLineSegment Points="0 14,12 15,17 20" />
                                        <ArcSegment Point="17,0"
                                                    Size="30,30" />
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                        <!--hightlight-->
                        <Path Fill="{StaticResource glossBrush}">
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="13,6"
                                                IsClosed="True">
                                        <PolyLineSegment Points="1,7 1,11 17.5,11" />
                                        <ArcSegment Point="16.5,2"
                                                    Size="30,30"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                        <!--sound waves-->
                        <Polygon Points="20,5 25,0 27,3"
                                 Fill="{StaticResource textBrush}" />
                        <Polygon Points="20,10 28,9 27,6"
                                 Fill="{StaticResource textBrush}" />
                        <Polygon Points="20,13 26,17 27,13"
                                 Fill="{StaticResource textBrush}" />
                        <Polygon Points="20,17 24,21 26,18"
                                 Fill="{StaticResource textBrush}" />
                    </Canvas>
                        <!--Off symbol-->
                        <Canvas>
                            <Canvas.Style>
                                <Style TargetType="{x:Type Canvas}">
                                    <Setter Property="Visibility"
                                            Value="Hidden" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsMuted, ElementName=mediaElement}"
                                                     Value="True">
                                            <Setter Property="Visibility"
                                                    Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Canvas.Style>
                            <Ellipse Width="20"
                                     Height="20"
                                     Stroke="{DynamicResource bgBrush}"
                                     Canvas.Left="0"
                                     Canvas.Top="0"
                                     StrokeThickness="3" />
                            <Path Width="13.498"
                                  Height="16.446"
                                  Fill="{x:Null}"
                                  Stretch="Fill"
                                  Stroke="{DynamicResource bgBrush}"
                                  StrokeThickness="3"
                                  Canvas.Left="3.442"
                                  Canvas.Top="1.319"
                                  Data="M4.9424596,16.265143 L15.440304,2.8191997" />
                        </Canvas>
                    </Grid>
                </ToggleButton>
            </Grid>
            <Slider Grid.Column="2"
                    VerticalAlignment="Center"
                    Margin="0 0 10 0"
                    Minimum="0"
                    Maximum="1"
                    Value="{Binding ElementName=mediaElement, Path=Volume}"/>
        </Grid>
        <Slider x:Name="progressSlider"
               DockPanel.Dock="Bottom"
               Minimum="0"
               LargeChange="1000"
               PreviewMouseLeftButtonDown="progressSlider_PreviewMouseLeftButtonDown"
               PreviewMouseLeftButtonUp="progressSlider_PreviewMouseLeftButtonUp" />
        <Grid DockPanel.Dock="Top">
            <Grid.RowDefinitions>
                <RowDefinition Height="3*" />
                <RowDefinition Height="1*" />
            </Grid.RowDefinitions>
            <MediaElement x:Name="mediaElement"
                          VerticalAlignment="Bottom"
                          LoadedBehavior="Manual"
                          MediaOpened="mediaElement_MediaOpened"
                          MediaEnded="mediaElement_MediaEnded" />
            <Rectangle x:Name="reflection"
                       Grid.Row="1"
                       Width="{Binding Path=ActualWidth, ElementName=mediaElement}"
                       MinHeight="24">
                <Rectangle.Fill>
                    <VisualBrush Visual="{Binding ElementName=mediaElement}">
                        <VisualBrush.Transform>
                            <TransformGroup>
                                <ScaleTransform ScaleY="-1" />
                                <TranslateTransform Y="{Binding Path=ActualHeight,ElementName=reflection}" />
                            </TransformGroup>
                        </VisualBrush.Transform>
                    </VisualBrush>
                </Rectangle.Fill>
                <Rectangle.OpacityMask>
                    <LinearGradientBrush EndPoint="0.5,0.5"
                                         StartPoint="0.5,0">
                        <GradientStop Color="#72000000"
                                      Offset="0" />
                        <GradientStop Color="#00ffffff"
                                      Offset="1"/>
                    </LinearGradientBrush>
                </Rectangle.OpacityMask>
            </Rectangle>
        </Grid>
    </DockPanel>
</UserControl>
